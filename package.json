{
  "name": "business-task-automation",
  "version": "1.0.0",
  "description": "AI-powered business task automation platform",
  "main": "index.js",
  "scripts": {
    "setup": "node setup.js",
    "install:all": "npm install && npm run install:services && npm run install:client && npm run install:testing && npm run install:scripts",
    "install:services": "cd services && npm install",
    "install:client": "cd client && npm install", 
    "install:testing": "cd testing && npm install",
    "install:scripts": "cd scripts && npm install",
    "clean:install": "node scripts/clean-install.js",
    "verify:build": "node scripts/verify-build.js",
    "fix:deps": "node scripts/fix-dependencies.js",
    "fix:imports": "node scripts/fix-imports.js",
    "fix:ajv": "node scripts/fix-ajv-issue.js",
    "fix:all": "node scripts/fix-all-issues.js",
    "fix:forms": "node scripts/fix-form-types.js",
    "fix:ci": "node scripts/fix-ci-cd.js",
    "fix:types": "node scripts/fix-literal-types.js",
    "scan:all": "node scripts/comprehensive-project-scan.js",
    "fix:everything": "node scripts/fix-everything.js",
    "make:functional": "node scripts/make-platform-functional.js",
    "install:platform": "node scripts/install-platform.js",
    "setup:db": "node scripts/setup-database.js",
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:client\"",
    "dev:api": "cd services && npm run dev",
    "dev:client": "cd client && npm start",
    "build": "npm run build:services && npm run build:client",
    "build:services": "cd services && npm run build",
    "build:client": "cd client && npm run build",
    "test": "npm run test:services && npm run test:client",
    "test:services": "cd services && npm test",
    "test:client": "cd client && npm test",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:performance && npm run test:security && npm run test:contract && npm run test:data-quality && npm run test:chaos",
    "test:unit": "npm run test:services && npm run test:client",
    "test:e2e": "cd client && npm run test:e2e",
    "test:e2e:open": "cd client && npm run test:e2e:open",
    "test:integration": "node testing/integration/run-integration-tests.js",
    "test:performance": "npx k6 run testing/performance/load-test.js || echo 'k6 not installed, skipping performance tests'",
    "test:performance:stress": "npx k6 run testing/performance/stress-test.js || echo 'k6 not installed, skipping stress tests'",
    "test:security": "node testing/security/run-security-tests.js",
    "test:contract": "node testing/contract/run-contract-tests.js",
    "test:data-quality": "python testing/data-quality/run-data-quality-tests.py",
    "test:chaos": "node testing/chaos/run-chaos-tests.js",
    "test:smoke": "npm run test:unit && npm run test:integration",
    "test:ci": "npm run test:smoke && npm run test:e2e",
    "test:nightly": "npm run test:all",
    "test:setup": "node testing/scripts/setup-test-environment.js",
    "test:cleanup": "node testing/scripts/cleanup-test-environment.js",
    "test:seed": "node testing/scripts/seed-test-data.js",
    "start": "npm run start:services",
    "start:services": "cd services && npm start",
    "deploy": "cd scripts && npm run deploy",
    "deploy:docker": "docker-compose up -d",
    "deploy:k8s": "cd terraform && terraform apply",
    "clean": "npm run clean:services && npm run clean:client && npm run clean:testing",
    "clean:services": "cd services && rm -rf node_modules dist",
    "clean:client": "cd client && rm -rf node_modules build",
    "clean:testing": "cd testing && rm -rf node_modules coverage",
    "lint": "npm run lint:services && npm run lint:client",
    "lint:services": "cd services && npm run lint",
    "lint:client": "cd client && npm run lint",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "health": "curl -f http://localhost:3001/health && curl -f http://localhost:3000",
    "logs": "docker-compose logs -f",
    "status": "node scripts/status-check.js"
  },
  "keywords": ["automation", "ai", "business", "microservices"],
  "author": "Business Task Automation Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "artillery": "^2.0.0",
    "pact": "^4.3.2",
    "@pact-foundation/pact": "^12.1.3",
    "newman": "^6.0.0",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "cross-env": "^7.0.3"
  }
}
