apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: business-automation-ingress
  namespace: business-automation
  labels:
    app: business-automation
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;";
spec:
  tls:
  - hosts:
    - business-automation.example.com
    - api.business-automation.example.com
    secretName: business-automation-tls
  rules:
  - host: business-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: business-automation-frontend
            port:
              number: 80
  - host: api.business-automation.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: business-automation-api-gateway
            port:
              number: 3000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: business-automation-api-gateway
            port:
              number: 3000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: business-automation-network-policy
  namespace: business-automation
  labels:
    app: business-automation
    component: security
spec:
  podSelector:
    matchLabels:
      app: business-automation
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 8080
  # Allow inter-service communication
  - from:
    - podSelector:
        matchLabels:
          app: business-automation
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
    - protocol: TCP
      port: 27017
    - protocol: TCP
      port: 6379
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS to external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow inter-service communication
  - to:
    - podSelector:
        matchLabels:
          app: business-automation
    ports:
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
    - protocol: TCP
      port: 27017
    - protocol: TCP
      port: 6379