apiVersion: v1
kind: ConfigMap
metadata:
  name: business-automation-config
  namespace: business-automation
  labels:
    app: business-automation
    component: config
data:
  # Application configuration
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://business-automation.example.com"
  JWT_EXPIRES_IN: "7d"
  
  # Database configuration
  MONGODB_DATABASE: "business-automation"
  REDIS_DB: "0"
  
  # Service discovery
  API_GATEWAY_PORT: "3000"
  TASK_ORCHESTRATOR_PORT: "3001"
  AI_ML_ENGINE_PORT: "3002"
  
  # Performance settings
  MAX_CONCURRENT_TASKS: "100"
  TASK_TIMEOUT: "300000"
  CACHE_TTL: "3600"
  
  # Feature flags
  ENABLE_AI_FEATURES: "true"
  ENABLE_ANALYTICS: "true"
  ENABLE_MONITORING: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: business-automation
  labels:
    app: business-automation
    component: frontend
data:
  nginx.conf: |
    upstream api_backend {
        server business-automation-api-gateway:3000;
        keepalive 32;
    }
    
    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy
        location /api/ {
            proxy_pass http://api_backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # WebSocket proxy
        location /ws/ {
            proxy_pass http://api_backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # Client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }
    }