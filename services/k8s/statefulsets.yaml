apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: business-automation
  labels:
    app: business-automation
    component: mongodb
spec:
  serviceName: mongodb
  replicas: 3
  selector:
    matchLabels:
      app: business-automation
      component: mongodb
  template:
    metadata:
      labels:
        app: business-automation
        component: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: business-automation-secrets
              key: MONGODB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: business-automation-config
              key: MONGODB_DATABASE
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /data/configdb
        securityContext:
          runAsNonRoot: false  # MongoDB requires root for initialization
          fsGroup: 999
      volumes:
      - name: mongodb-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
      labels:
        app: business-automation
        component: mongodb
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 50Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: business-automation
  labels:
    app: business-automation
    component: redis
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: business-automation
      component: redis
  template:
    metadata:
      labels:
        app: business-automation
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: business-automation-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          fsGroup: 999
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app: business-automation
        component: redis
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: business-automation
  labels:
    app: business-automation
    component: redis
data:
  redis.conf: |
    # Redis configuration for business automation
    bind 0.0.0.0
    port 6379
    
    # Security
    requirepass ${REDIS_PASSWORD}
    
    # Memory management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    
    # Performance
    tcp-keepalive 300
    timeout 0
    
    # Append only file
    appendonly yes
    appendfsync everysec
    
    # Disable dangerous commands
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""